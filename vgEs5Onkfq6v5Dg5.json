{"createdAt":"2025-07-21T18:37:49.159Z","updatedAt":"2025-10-08T12:55:45.342Z","id":"vgEs5Onkfq6v5Dg5","name":"Integracao STW Chat e Desk - Formulario Integracao","active":true,"isArchived":false,"nodes":[{"parameters":{"respondWith":"text","responseBody":"={{ $json.categorias }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[608,1760],"id":"b3188119-b5fc-4ebf-bb2b-9489b99677ad","name":"Respond to Webhook"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"=get-categories-list","operator":{"type":"string","operation":"equals"},"id":"9e6ce5fc-cefd-4a27-ab32-d2126ea30696"}],"combinator":"and"},"renameOutput":true,"outputKey":"categorias"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"95b20d97-a88a-4164-859f-97e44e9cdb64","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-subcategories-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"sub-categorias"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7d36a600-72f3-4c15-a7e1-8e0fd5dfc357","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-types-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"tipo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9ddaa321-df74-45e1-8f5d-d49508a69ffa","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-operators-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"operadores"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4950265e-d81b-4cab-9f3a-708d4880782a","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-applicants-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"solicitantes"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"81f4a870-0a5a-466a-896d-9ae91c6dffc3","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-status","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"status"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"727c3491-453b-4d3f-8d6a-2f971e8255ac","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-open-tickets","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"chamados"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-96,2304],"id":"0934e6f5-35a9-4670-8581-88cd3e9d0a63","name":"Switch"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-304,2384],"id":"b779231f-2935-4381-a08e-b293e42a1815","name":"getToken"},{"parameters":{"httpMethod":"POST","path":"proxy-integration-desk","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-496,2384],"id":"bba6af83-9c2a-43bb-91ea-dd68563c0402","name":"RequestDesk","webhookId":"ee451848-6029-4fd1-9fab-c30fb0b0babd"},{"parameters":{"jsCode":"const items = $input.all();\nasync function main() {\n  const subcategorias = items.map(item => item.json.sub_categoria);\n\n  return {\n    json: {\n      subcategorias\n    }\n  };\n}\n\nreturn main();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,1952],"id":"41146dc9-f36b-4be5-a8ac-ae46087a0fea","name":"Code1"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.subcategorias }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[608,1952],"id":"b115d0cb-d6e1-441a-ab16-bdd21043befc","name":"Respond to Webhook3"},{"parameters":{"jsCode":"const token = $('getToken').item.json.data;\nconst items = $input.all();\nconst number = $('RequestDesk').first().json.body.number\nconst solicitanteId = $('RequestDesk').first().json.body.solicitanteId\n\nasync function getAssuntos(categoria, codigoCliente) {\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/ListaAutocategoria\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": categoria,\n      \"Ativo\": \"S\",\n      \"Filtro\": {\n        \"ListaCatalogoUsuario\": [codigoCliente, \"equal\"]\n      }\n    }\n  };\n\n  const response = await this.helpers.httpRequest(request);\n\n  const normalize = (s) => (s ?? \"\")\n    .toString()\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\");\n\n  const q = normalize(categoria);\n  const hasExactPrefix =\n    Array.isArray(response?.root) &&\n    response.root.some(item => {\n      const assunto = normalize(item?.Assunto);\n      return assunto.startsWith(q);\n    });\n\n  return hasExactPrefix ? categoria : null;\n}\n\nasync function main() {\n  const promises = items.map(item => getAssuntos(item.json.categoria, solicitanteId));\n  const categoriasComChave = await Promise.all(promises);\n\n  const categoriasFiltradas = categoriasComChave.filter(Boolean);\n\n  return {\n    json: {\n      categorias: categoriasFiltradas\n    }\n  };\n}\n\nreturn main();\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,1760],"id":"5f517add-f982-4bd5-ba40-66e82e8df757","name":"Code4","alwaysOutputData":true},{"parameters":{"operation":"executeQuery","query":"select distinct sub_categoria from AUTO_CATEGORIA_DESK where categoria = '{{ $('RequestDesk').item.json.body.assuntoId }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,1952],"id":"ad671bd1-9ea6-46a1-8d65-d618719a1a8e","name":"MySQL3","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct tipo from AUTO_CATEGORIA_DESK where categoria = '{{ $('RequestDesk').item.json.body.assunto }}' and  sub_categoria = '{{ $('RequestDesk').item.json.body.subcategoria }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,2112],"id":"9f381a57-9771-432a-95fd-2f00537d2c4a","name":"MySQL2","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.tipos }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[608,2112],"id":"aef1d442-9004-4a22-98e5-9227636e2feb","name":"Respond to Webhook4"},{"parameters":{"jsCode":"const items = $input.all();\nasync function main() {\n  const tipos = items.map(item => item.json.tipo);\n\n  return {\n    json: {\n      tipos\n    }\n  };\n}\n\nreturn main();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,2112],"id":"be03f3cd-35e9-46ad-a813-3c71850a3fe3","name":"Code"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <title>Formulário de Atendimento</title>\n\n<style>\n    body {\n      background: #f9f9f9;\n      color: #333;\n      padding-bottom: 80px;\n      /* min-height: 100vh; */\n    }\n    .form-container {\n      max-width: 400px;\n      background: #fff;\n      border-radius: 10px;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.07);\n      margin: 32px auto 0 auto;\n      padding: 24px;\n    }\n    \n    /* Modal customizado */\n    #modal-confirm {\n      display: none;\n      position: fixed; \n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.3);\n      align-items: center; \n      justify-content: center; \n      z-index: 9999;\n    }\n    #modal-confirm .modal-box {\n      background: white;\n      padding: 24px 18px;\n      border-radius: 10px;\n      min-width: 250px;\n      text-align: center;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.18);\n    }\n</style>\n\n</head>\n<body>\n  <div class=\"form-container\">\n    <!-- <h4 class=\"mb-3 text-center\">Formulário de Atendimento</h4> -->\n    <form id=\"form-atendimento\" action=\"https://n8n.systemway.com.vc/webhook/749c4c10-156f-4044-845f-a7b1bc4c55a2\" method=\"POST\">\n      <input type=\"hidden\" id=\"chatId\" name=\"chatId\" value=\"{{ $json.query.chatId }}\">\n      <input type=\"hidden\" id=\"number\" name=\"number\" value=\"{{ $json.query.number }}\"> \n      <input type=\"hidden\" id=\"cliente\" name=\"cliente\">\n      <input type=\"hidden\" id=\"nomeSolicitante\" name=\"nomeSolicitante\">\n      <input type=\"hidden\" id=\"solicitanteId\" name=\"solicitanteId\">\n\n      <div class=\"mb-3\">\n        <label for=\"solicitante\" class=\"form-label\">Solicitante:</label>\n        <select id=\"solicitante\" name=\"solicitante\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"assunto\" class=\"form-label\">Assunto:</label>\n        <select id=\"assunto\" name=\"assunto\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"subcategoria\" class=\"form-label\">Subcategoria:</label>\n        <select id=\"subcategoria\" name=\"subcategoria\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"tipo\" class=\"form-label\">Tipo:</label>\n        <select id=\"tipo\" name=\"tipo\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"obsInterna\" class=\"form-label\">Observação Interna:</label>\n        <textarea id=\"obsInterna\" name=\"obsInterna\" class=\"form-control\" rows=\"4\" placeholder=\"Descreva o problema ...\"></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"grupo\" class=\"form-label\">Grupo:</label>\n        <select id=\"grupo\" name=\"grupo\" class=\"form-select\"></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"operador\" class=\"form-label\">Operador:</label>\n        <select id=\"operador\" name=\"operador\" class=\"form-select\"></select>\n      </div>\n      <button id=\"btn-enviar\" type=\"submit\" class=\"btn btn-success\">Enviar</button>\n    </form>\n  </div>\n\n  <!-- Modal de confirmação -->\n  <div id=\"modal-confirm\">\n    <div class=\"modal-box\">\n      <div style=\"font-weight: bold; margin-bottom:10px;\">Confirmação</div>\n      <div style=\"margin-bottom:20px;\">Tem certeza que deseja abrir o chamado?</div>\n      <button id=\"modal-confirm-ok\" class=\"btn btn-success me-2\">Confirmar</button>\n      <button id=\"modal-confirm-cancel\" class=\"btn btn-success\">Cancelar</button>\n    </div>\n  </div>\n\n  <!-- Loader Bootstrap -->\n  <div id=\"form-loader\" style=\"display: none; position: fixed; top:0; left:0; right:0; bottom:0; background: rgba(255,255,255,0.7); z-index: 99999; align-items: center; justify-content: center;\">\n    <div class=\"d-flex flex-column align-items-center\">\n      <div class=\"spinner-border text-success\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n        <span class=\"visually-hidden\">Carregando...</span>\n      </div>\n      <div style=\"margin-top: 16px; color: #198754;\">Enviando formulário...</div>\n    </div>\n  </div>\n\n<script>\n  let operadoresData = [];\n  \n  async function getApplicants(){\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          'event': 'get-applicants-list',\n          'number': '{{ $json.query.number }}'\n        })\n      });\n\n      if (!response.ok) throw new Error('Erro ao buscar lista');\n\n      const data = await response.json(); // Array de strings\n      console.log(\"Solicitantes:\", data);\n\n      const selectSolicitante = document.getElementById('solicitante');\n      selectSolicitante.innerHTML = '<option value=\"\"></option>' // limpa opções anteriores\n\n      data.forEach(item => {\n        const displayName = `${item.cliente} - ${item.nome_completo}`;\n        const option = document.createElement('option');\n        option.value = displayName;\n        option.textContent = displayName;\n        \n        option.dataset.cliente = item.cliente;\n        option.dataset.nome = item.nome_completo;\n        option.dataset.solicitanteId = item.chave_solicitante\n    \n        selectSolicitante.appendChild(option);\n      });\n\n    } catch (error) {\n      console.error('Erro ao buscar dados:', error);\n    }\n  }\n  async function getCategories(nomeSolicitante, solicitanteId) {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          'event': 'get-categories-list',\n          'name': nomeSolicitante,\n          'number': '{{ $json.query.number }}',\n          'solicitanteId': solicitanteId\n        })\n      });\n\n      if (!response.ok) throw new Error('Erro ao buscar lista');\n\n      const data = await response.json();\n      // console.log(\"Categorias recebidas:\", data);\n\n      const selectAssunto = document.getElementById('assunto');\n      selectAssunto.innerHTML = '<option value=\"\"></option>'\n\n      data.forEach(categoria => {\n        const option = document.createElement('option');\n        option.value = categoria;\n        option.textContent = categoria;\n        selectAssunto.appendChild(option);\n      });\n\n    } catch (error) {\n      console.error('Erro ao buscar dados:', error);\n    }\n  }\n\n  async function getSubcategorias(assuntoId) {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          event: 'get-subcategories-list',\n          assuntoId: assuntoId\n        })\n      });\n  \n      if (!response.ok) throw new Error('Erro ao buscar subcategorias');\n      const data = await response.json();\n      // console.log(data)\n      const subcategorias = data\n  \n      const selectSubcategoria = document.getElementById('subcategoria');\n      selectSubcategoria.innerHTML = '<option value=\"\"></option>';\n  \n      subcategorias.forEach(sub => {\n        const option = document.createElement('option');\n        option.value = sub;\n        option.textContent = sub;\n        selectSubcategoria.appendChild(option);\n      });\n  \n    } catch (error) {\n      console.error('Erro ao carregar subcategorias:', error);\n    }\n}\n\nasync function getTipos(assunto, subcategoria) {\n  try {\n    const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        event: 'get-types-list',\n        assunto: assunto,\n        subcategoria: subcategoria\n      })\n    });\n\n    if (!response.ok) throw new Error('Erro ao buscar tipos');\n    const data = await response.json();\n\n    // console.log(data)\n    const tipos = data;\n\n    const selectTipo = document.getElementById('tipo');\n    selectTipo.innerHTML = '<option value=\"\"></option>';\n\n    tipos.forEach(tipo => {\n      const option = document.createElement('option');\n      option.value = tipo;\n      option.textContent = tipo;\n      selectTipo.appendChild(option);\n    });\n\n  } catch (error) {\n    console.error('Erro ao carregar tipos:', error);\n  }\n}\n\nasync function getGroupsAndOperators() {\n  try {\n    const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        event: 'get-operators-list'\n      })\n    });\n\n    if (!response.ok) throw new Error('Erro ao buscar operadores e grupos');\n\n    const data = await response.json();\n    operadoresData = data;\n    // console.log(\"Operadores e grupos:\", data);\n\n    preencherOperadores(operadoresData);\n\n    const gruposUnicos = [...new Set(data.map(op => op.grupo))];\n    const selectGrupo = document.getElementById('grupo');\n    selectGrupo.innerHTML = '';\n\n    gruposUnicos.forEach(grupo => {\n      const option = document.createElement('option');\n      option.value = grupo;\n      option.textContent = grupo;\n      selectGrupo.appendChild(option);\n    });\n\n    const setor = '{{ $json.query.setor }}';\n    if (setor) {\n      for (let i = 0; i < selectGrupo.options.length; i++) {\n        if (selectGrupo.options[i].value === setor) {\n          selectGrupo.selectedIndex = i;\n          break;\n        }\n      }\n      selectGrupo.dispatchEvent(new Event('change'));\n    }\n\n  } catch (error) {\n    console.error('Erro ao carregar operadores e grupos:', error);\n  }\n}\n\nfunction preencherOperadores(operadores) {\n  const selectOperador = document.getElementById('operador');\n  selectOperador.innerHTML = '<option value=\"\"></option>';\n  operadores.forEach(op => {\n    const option = document.createElement('option');\n    option.value = op.nome_completo;\n    option.textContent = op.nome_completo;\n    selectOperador.appendChild(option);\n  });\n}\n\n  document.addEventListener('DOMContentLoaded', () => {\n    getGroupsAndOperators()\n    getApplicants()\n\n    document.getElementById('solicitante').addEventListener('change', function () {\n      const selectedOption = this.options[this.selectedIndex];\n    \n      const cliente = selectedOption.dataset.cliente || '';\n      const nome = selectedOption.dataset.nome || '';\n      const solicitanteId = selectedOption.dataset.solicitanteId || '';\n    \n      document.getElementById('cliente').value = cliente;\n      document.getElementById('nomeSolicitante').value = nome;\n      document.getElementById('solicitanteId').value = solicitanteId;\n    \n      if (cliente && nome) {\n        getCategories(`${cliente} - ${nome}`, solicitanteId);\n      }\n    });\n\n\n    document.getElementById('assunto').addEventListener('change', function () {\n      const categoriaSelecionada = this.value;\n      getSubcategorias(categoriaSelecionada);\n    });\n\n    document.getElementById('subcategoria').addEventListener('change', function () {\n      const assuntoSelecionado = document.getElementById('assunto').value;\n      const subcategoriaSelecionada = this.value;\n      getTipos(assuntoSelecionado, subcategoriaSelecionada);\n    });\n\n  document.getElementById('grupo').addEventListener('change', function () {\n    const grupoSelecionado = this.value;\n    if (grupoSelecionado) {\n      const filtrados = operadoresData.filter(op => op.grupo === grupoSelecionado);\n      preencherOperadores(filtrados);\n    } else {\n      preencherOperadores(operadoresData);\n    }\n})\n\n    document.getElementById('btn-enviar').addEventListener('click', function (e) {\n      e.preventDefault();\n      const form = document.getElementById('form-atendimento');\n      if (form.reportValidity()) {\n        document.getElementById('modal-confirm').style.display = 'flex';\n      }\n    });\n    \n    // Eventos dos botões do modal\n    document.getElementById('modal-confirm-ok').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n      document.getElementById('form-loader').style.display = 'flex';\n      setTimeout(() => {\n        document.getElementById('form-atendimento').submit();\n      }, 150);\n    });\n    document.getElementById('modal-confirm-cancel').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n    });\n\n  });\n</script>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[192,1360],"id":"35187102-55d1-4748-84f8-437bce3da189","name":"HTML2"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,1360],"id":"f821062e-deb8-44cc-a362-ae9623dabca0","name":"Respond to Webhook5"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Primeira Extensão</title>\n\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n        rel=\"stylesheet\"\n        integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\n        crossorigin=\"anonymous\">\n\n  <script src=\"https://fileschat.sfo2.cdn.digitaloceanspaces.com/public/libs/wlclient.js\"></script>\n\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: auto;\n      min-height: 100%;\n      overflow-x: hidden;\n      /* overflow-y: auto; */\n    }\n    iframe {\n      height: calc(100vh - 60px);\n      width: 100%;\n      border: none;\n      /* height: 95vh;\n      overflow: hidden; */\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container p-2 pb-0\">\n    <div class=\"d-flex gap-2 mb-2\">\n      <button id=\"btn-chamado\" class=\"btn btn-success flex-fill\">Chamado</button>\n      <button id=\"btn-interacao\" class=\"btn btn-outline-primary flex-fill\">Interação</button>\n    </div>\n  </div>\n\n  <iframe id=\"form-frame\" src=\"\" style=\"display:none;\"></iframe>\n\n  <script>\n    const urlFormChamado   = \"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0\";\n    const urlFormInteracao = \"https://n8n.systemway.com.vc/webhook/ac8b649c-2328-4289-a979-b939f4c68f92\";\n\n    function getParams(attendance) {\n      return attendance\n        ? `?name=${encodeURIComponent(attendance.contato.nome)}&chatId=${encodeURIComponent(attendance.atendimentoId)}&number=${encodeURIComponent(attendance.contato.numero)}&setor=${encodeURIComponent(attendance.setor.nome)}`\n        : \"\";\n    }\n\n    let currentAttendance = null;\n\n    function updateIframe(url) {\n      const params = getParams(currentAttendance);\n      document.getElementById('form-frame').src = url + params;\n    }\n\n    function setActiveButton(tipo) {\n      const btnChamado   = document.getElementById('btn-chamado');\n      const btnInteracao = document.getElementById('btn-interacao');\n      if (tipo === 'chamado') {\n        btnChamado.className   = \"btn btn-success flex-fill\";\n        btnInteracao.className = \"btn btn-outline-primary flex-fill\";\n      } else {\n        btnChamado.className   = \"btn btn-outline-success flex-fill\";\n        btnInteracao.className = \"btn btn-primary flex-fill\";\n      }\n    }\n\n    document.getElementById('btn-chamado').onclick = () => {\n      updateIframe(urlFormChamado);\n      setActiveButton('chamado');\n    };\n\n    document.getElementById('btn-interacao').onclick = () => {\n      updateIframe(urlFormInteracao);\n      setActiveButton('interacao');\n    };\n\n    window.WlExtension.initialize({\n      events: {\n        onOpenAttendance: (attendance) => {\n          currentAttendance = attendance;\n          document.getElementById('form-frame').style.display = 'block';\n          // console.log(attendance)\n          updateIframe(urlFormChamado);\n          setActiveButton('chamado');\n        }\n      }\n    });\n\n    window.onload = () => {\n      document.getElementById('form-frame').style.display = 'none';\n    };\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[192,1184],"id":"ad846ac3-f8ce-42fb-b42a-9a79b5fc5546","name":"HTML3"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,1184],"id":"2ef25838-8f73-4f71-9e76-36a1baace460","name":"Respond to Webhook6"},{"parameters":{"path":"integration-stwchat","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-48,1184],"id":"89bf685a-54f1-45ed-b281-851ee2eec736","name":"integration","webhookId":"24319931-8769-47ec-a867-dc6062690ab9"},{"parameters":{"content":"## Consulta ao banco de dados e a API do DeskManager","height":1440,"width":1360,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-544,1744],"id":"be79109c-eeef-4e3d-afbb-720ed0e47992","name":"Sticky Note"},{"parameters":{"operation":"executeQuery","query":"select nome_completo, grupo from OPERADORES_DESK","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,2288],"id":"b62807b9-e12f-441d-aabb-9c0b1d933017","name":"MySQL","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,2288],"id":"736b3ed9-88f8-4fad-9881-cfad2270c202","name":"Respond to Webhook2"},{"parameters":{"jsCode":"const bodyData = $('form-response-chamado').first().json.body;\nconst chaveSolicitante = bodyData.solicitanteId;\nconst chaveAutocategoria = $('Merge').first().json.chaveAutoCategoria;\nconst chaveOperador = $('Merge').first().json.chaveOperador;\nconst chaveGrupo = $('Merge').first().json.chaveGrupo;\nconst token = JSON.parse($input.first().json.data);\n\nasync function fetchChatMessages(chatId) {\n  const requestOptions = {\n    url: `https://api.stw.chat/core/v2/api/chats/${chatId}`,\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': '689a61a95706d77b7eb722cb'\n    }\n  };\n\n  const response = await this.helpers.httpRequest(requestOptions);\n  return response.messages || [];\n}\n\nfunction formatDescricao(messages) {\n  return messages\n    .filter(msg => !msg.isSystemMessage && !msg.isPrivate)\n    .map(msg => {\n      const remetente = msg.isSentByMe ? 'Técnico' : msg.senderName;\n      const date = new Date(msg.dhMessage || msg.utcDhMessage);\n      const dataHorario = date.toLocaleString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n\n      if (msg.dataMedia && msg.dataMedia.urlFile && msg.dataMedia.mimetype) {\n        const tipo = (msg.dataMedia.mimetype.split('/')[1] || 'arquivo');\n        const nome = msg.dataMedia.filename || 'arquivo';\n        return `[${dataHorario}] ${remetente}:\\n[${tipo}] ${nome} - ${msg.dataMedia.urlFile}`;\n      }\n      return `[${dataHorario}] ${remetente}:\\n${msg.text || ''}`;\n    })\n    .join('\\n\\n');\n}\n\nasync function downloadAsBase64(url) {\n  const response = await this.helpers.request({\n    method: 'GET',\n    url: url,\n    encoding: null\n  });\n  return Buffer.from(response).toString('base64');\n}\n\nasync function openTicket(descricao) {\n  const options = {\n    url: 'https://api.desk.ms/ChamadosSuporte',\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: {\n      TChamado: {\n        Solicitante: chaveSolicitante,\n        AutoCategoria: chaveAutocategoria,\n        Solicitacao: \"000060\",\n        Descricao: descricao,\n        ObservacaoInterna: bodyData.obsInterna || \"\",\n        TransfCodGrupo: chaveGrupo || \"\",\n        TransfCodOperador: chaveOperador || \"\"\n      }\n    },\n    json: true\n  };\n\n  return await this.helpers.httpRequest(options);\n}\n\nasync function enviarAnexo(anexo, chamado) {\n  const request = {\n    url: \"https://files.desk.ms/v1/enviar\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"chamado\": chamado,\n      \"base64\": anexo.base64,\n      \"type\": anexo.mimetype,\n      \"name\": anexo.filename\n    }\n  };\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\n\nasync function sendSuccesfullMessage(ticket){\n  const options = {\n    url: 'https://api.stw.chat/core/v2/api/chats/send-text',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': \"689a61a95706d77b7eb722cb\"\n    },\n    body: {\n      \"forceSend\": true,\n      \"isWhisper\": false,\n      \"message\": `Chamado criado com sucesso!\\nO número do seu chamado é: ${ticket}`,\n      \"number\": bodyData.number,\n      \"verifyContact\": false\n    },\n    json: true\n  };\n\n  return await this.helpers.httpRequest(options);\n}\n\nconst chatId = bodyData.chatId;\nconst messages = await fetchChatMessages(chatId);\nconst descricao = formatDescricao(messages);\nconst chamadoResponse = await openTicket(descricao);\nconst chamado = chamadoResponse[0]\nconst sendMessage = await sendSuccesfullMessage(chamado)\n\nconst anexos = [];\nfor (const msg of messages) {\n  if (msg.dataMedia && msg.dataMedia.urlFile) {\n    const base64 = await downloadAsBase64.call(this, msg.dataMedia.urlFile);\n    anexos.push({\n      base64: base64,\n      filename: msg.dataMedia.filename || 'anexo',\n      mimetype: msg.dataMedia.mimetype || 'application/octet-stream'\n    });\n  }\n}\n\nconst anexosResultados = [];\nfor (const anexo of anexos) {\n  if (chamado) {\n    const resultado = await enviarAnexo(anexo, chamado);\n    anexosResultados.push(resultado);\n  }\n}\n\nreturn [{\n  json: {\n    descricao,\n    chamado: chamadoResponse,\n    anexosEnviados: anexosResultados,\n    sendMessage\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1488,2144],"id":"4784b43c-43ca-4487-8392-5cbe27c8b7b8","name":"Code2"},{"parameters":{"operation":"executeQuery","query":"select chave as chaveAutoCategoria from AUTO_CATEGORIA_DESK where assunto_completo = '{{ $json.body.assunto }} - {{ $json.body.subcategoria }} - {{ $json.body.tipo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,1952],"id":"5989d2bd-ca83-4b5d-95cc-8513c3a49f10","name":"autocategoriaCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select chave as chaveOperador from OPERADORES_DESK where nome_completo = '{{ $json.body.operador }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,2144],"id":"f4bcdfad-f1e9-43aa-b0bd-213c4b86df35","name":"operadorCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-816,2144],"id":"38bd14ed-3439-4a3c-bf8d-2423fda745ae","name":"Respond to Webhook7"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":3,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1936,2128],"id":"17ba0866-630d-42f2-8e3b-b49bfd8df884","name":"Merge"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,2480],"id":"d85ac041-c4cc-47d3-9e9f-ef4d77ba9b57","name":"Respond to Webhook8"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1712,2144],"id":"015f5644-387d-4fb9-9f51-107888da0773","name":"getToken3"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,1552],"id":"c3fa1289-4352-4df8-9f5c-b40219c5c422","name":"Respond to Webhook9"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Interação no Chamado</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n  <style>\n    body {\n      background: #f9f9f9;\n      color: #333;\n      padding-bottom: 80px;\n    }\n    .form-container {\n      max-width: 400px;\n      background: #fff;\n      border-radius: 10px;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.07);\n      margin: 32px auto 0 auto;\n      padding: 24px;\n    }\n    #modal-confirm {\n      display: none;\n      position: fixed; \n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.3);\n      align-items: center; \n      justify-content: center; \n      z-index: 9999;\n    }\n    #modal-confirm .modal-box {\n      background: white;\n      padding: 24px 18px;\n      border-radius: 10px;\n      min-width: 250px;\n      text-align: center;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.18);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"form-container\">\n    <!-- <h4 class=\"mb-3 text-center\">Interação no Chamado</h4> -->\n    <form id=\"form-interacao\" action=\"https://n8n.systemway.com.vc/webhook/1cf835b4-5339-4a22-9cf9-d124d75f437a\" method=\"POST\">\n      <input type=\"hidden\" id=\"chatId\" name=\"chatId\" value=\"{{ $json.query.chatId }}\">\n      <div class=\"mb-3\">\n        <label for=\"chamados\" class=\"form-label\">Chamados:</label>\n        <select id=\"chamados\" name=\"chamados\" class=\"form-select\" required>\n        </select>\n      </div>\n      <div id=\"avisoSemChamado\" style=\"display:none; color: #b02a37; font-weight: 500; margin-bottom:8px;\">\n        Nenhum chamado em aberto. Informe manualmente o número do chamado para abrir a interação :\n      </div>\n      <input id=\"chamadoManual\" name=\"chamadoManual\" type=\"text\" class=\"form-control mb-3\" style=\"display:none;\" placeholder=\"Exemplo: 0625-000123\">\n      <div class=\"mb-3\">\n        <label for=\"status\" class=\"form-label\">Status:</label>\n        <select id=\"status\" name=\"status\" class=\"form-select\" required>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"obsInterna\" class=\"form-label\">Observação Interna:</label>\n        <textarea id=\"obsInterna\" name=\"obsInterna\" class=\"form-control\" rows=\"4\" placeholder=\"Descreva o problema ...\"></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"grupo\" class=\"form-label\">Grupo:</label>\n        <select id=\"grupo\" name=\"grupo\" class=\"form-select\"></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"operador\" class=\"form-label\">Operador:</label>\n        <select id=\"operador\" name=\"operador\" class=\"form-select\"></select>\n      </div>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"btn-enviar\">Enviar</button>\n    </form>\n  </div>\n  <div id=\"modal-confirm\">\n    <div class=\"modal-box\">\n      <div style=\"font-weight: bold; margin-bottom:10px;\">Confirmação</div>\n      <div style=\"margin-bottom:20px;\">Tem certeza que deseja criar a interação?</div>\n      <button id=\"modal-confirm-ok\" class=\"btn btn-success me-2\">Confirmar</button>\n      <button id=\"modal-confirm-cancel\" class=\"btn btn-danger\">Cancelar</button>\n    </div>\n  </div>\n  <div id=\"form-loader\" style=\"display: none; position: fixed; top:0; left:0; right:0; bottom:0; background: rgba(255,255,255,0.7); z-index: 99999; align-items: center; justify-content: center;\">\n    <div class=\"d-flex flex-column align-items-center\">\n      <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n        <span class=\"visually-hidden\">Carregando...</span>\n      </div>\n      <div style=\"margin-top: 16px; color: #0d6efd;\">Enviando interação...</div>\n    </div>\n  </div>\n\n  <script>\n    let operadoresData = [];   \n\n    async function getOpenTickets(){\n      try {\n        const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            'event': 'get-open-tickets',\n            'number': '{{ $json.query.number }}'\n          })\n        });\n  \n        if (!response.ok) throw new Error('Erro ao buscar lista')\n  \n        const data = await response.json()\n        console.log(\"Dados Chamados em Aberto: \", data)\n\n        const chamadosValidos = data.filter(item => Object.keys(item).length > 0)\n        const selectChamados = document.getElementById('chamados')\n        const avisoSemChamado = document.getElementById('avisoSemChamado')\n        const chamadoManual = document.getElementById('chamadoManual')\n        selectChamados.innerHTML = ''; // Limpa tudo\n        \n        if (chamadosValidos.length === 0) {\n          selectChamados.style.display = \"none\";\n          avisoSemChamado.style.display = \"block\";\n          chamadoManual.style.display = \"block\";\n        } else {\n          selectChamados.style.display = \"block\";\n          avisoSemChamado.style.display = \"none\";\n          chamadoManual.style.display = \"none\";\n    \n          selectChamados.disabled = false;\n          const option = document.createElement('option')\n          option.value = '';\n          option.textContent = '';\n          selectChamados.appendChild(option);\n    \n          data.forEach(item => {\n            const option = document.createElement('option');\n            option.value = item.chamado;\n            option.textContent = item.chamado;\n            selectChamados.appendChild(option);\n          });\n        }\n  \n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n    \n    async function getStatus(){\n      try {\n        const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            'event': 'get-status'\n          })\n        });\n  \n        if (!response.ok) throw new Error('Erro ao buscar lista');\n  \n        const data = await response.json();\n        \n        const selectStatus = document.getElementById('status');\n        selectStatus.innerHTML = '<option value=\"\"></option>'\n  \n        data.forEach(item => {\n          const option = document.createElement('option');\n          option.value = item.status;\n          option.textContent = item.status;\n          selectStatus.appendChild(option);\n        });\n  \n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n\n  async function getGroupsAndOperators() {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          event: 'get-operators-list'\n        })\n      });\n  \n      if (!response.ok) throw new Error('Erro ao buscar operadores e grupos');\n  \n      const data = await response.json();\n      operadoresData = data;\n      // console.log(\"Operadores e grupos:\", data);\n  \n      preencherOperadores(operadoresData);\n  \n      const gruposUnicos = [...new Set(data.map(op => op.grupo))];\n      const selectGrupo = document.getElementById('grupo');\n      selectGrupo.innerHTML = '<option value=\"\"></option>';\n  \n      gruposUnicos.forEach(grupo => {\n        const option = document.createElement('option');\n        option.value = grupo;\n        option.textContent = grupo;\n        selectGrupo.appendChild(option);\n      });\n  \n    } catch (error) {\n      console.error('Erro ao carregar operadores e grupos:', error);\n    }\n  }\n\n  function preencherOperadores(operadores) {\n    const selectOperador = document.getElementById('operador');\n    selectOperador.innerHTML = '<option value=\"\"></option>';\n    operadores.forEach(op => {\n      const option = document.createElement('option');\n      option.value = op.nome_completo;\n      option.textContent = op.nome_completo;\n      selectOperador.appendChild(option);\n    });\n  }\n\n  document.addEventListener('DOMContentLoaded', () => {\n    getStatus();\n    getGroupsAndOperators();\n    getOpenTickets()\n\n    document.getElementById('grupo').addEventListener('change', function () {\n      const grupoSelecionado = this.value;\n      if (grupoSelecionado) {\n        const filtrados = operadoresData.filter(op => op.grupo === grupoSelecionado);\n        preencherOperadores(filtrados);\n      } else {\n        preencherOperadores(operadoresData);\n      }\n    });\n\n    document.getElementById('btn-enviar').addEventListener('click', function (e) {\n      e.preventDefault();\n      const form = document.getElementById('form-interacao');\n      if (form.reportValidity()) {\n        document.getElementById('modal-confirm').style.display = 'flex';\n      }\n    });\n    \n    // Eventos dos botões do modal\n    document.getElementById('modal-confirm-ok').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n      document.getElementById('form-loader').style.display = 'flex';\n\n      setTimeout(() => {\n        document.getElementById('form-interacao').submit();\n      }, 150);\n    });\n    document.getElementById('modal-confirm-cancel').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n    });\n\n  });\n    \n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[192,1552],"id":"bd6fd14c-5e5c-4175-83fe-ddd0b8f63ba7","name":"HTML"},{"parameters":{"path":"a02c4e89-ce02-4c3e-bd21-9d49f69b1af0","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-48,1360],"id":"3608fde4-584e-4c6d-83cf-387db695f4f8","name":"form-stwchat-chamado","webhookId":"f76c7e9c-f6fc-4666-aa76-bee0fd3e729e"},{"parameters":{"path":"ac8b649c-2328-4289-a979-b939f4c68f92","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-48,1552],"id":"70215a6f-85bb-4f5e-bd62-2c15f969ecb4","name":"form-stwchat-interacao","webhookId":"ac8b649c-2328-4289-a979-b939f4c68f92"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[400,2672],"id":"fd760be4-0efa-4c3a-b417-502e0182841c","name":"Respond to Webhook10"},{"parameters":{"httpMethod":"POST","path":"749c4c10-156f-4044-845f-a7b1bc4c55a2","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-2384,2144],"id":"72c24286-92ba-4edb-923c-83a3458b1d5f","name":"form-response-chamado","webhookId":"749c4c10-156f-4044-845f-a7b1bc4c55a2"},{"parameters":{"httpMethod":"POST","path":"1cf835b4-5339-4a22-9cf9-d124d75f437a","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-2384,2816],"id":"925ac9fa-8a32-4d5b-bed7-30bf85792c4e","name":"form-response-interacao","webhookId":"1cf835b4-5339-4a22-9cf9-d124d75f437a"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-816,2816],"id":"a7b8181a-912f-4fa0-822d-8bc794226d70","name":"Respond to Webhook11"},{"parameters":{"operation":"executeQuery","query":"select distinct empresa_nome from GRUPO_EMPRESAS_DESK where empresa_id in (select codigo_cliente from SOLICITANTES_DESK where telefone = {{ $('RequestDesk').item.json.body.number }})","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,2848],"id":"6bf02ef0-ab03-48c4-82ea-6a7ce1b08757","name":"MySQL6","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[608,2944],"id":"87935739-c5d3-40e3-ade7-3f2889e9a26b","name":"Respond to Webhook12"},{"parameters":{"jsCode":"const token = $('getToken').item.json.data;\nconst empresas = $input.all().filter(item => !!item.json.empresa_nome);\n\nif (empresas.length === 0) {\n  // Nenhuma empresa encontrada, retorna array vazio!\n  return [];\n}\n\nconst promessas = empresas.map(item => {\n  const grupoNome = item.json.empresa_nome;\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": grupoNome,\n      \"Ativo\": \"EmAberto\"\n    }\n  };\n\n  return this.helpers.httpRequest(request)\n    .then(response => response.root || []);\n});\n\nconst resultados = await Promise.all(promessas);\n\nconst chamadosTotal = [].concat(...resultados);\n\nreturn chamadosTotal.map(item => ({\n  json: {\n    chamado: `${item.CodChamado} - ${item.Assunto}`\n  }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,3024],"id":"27ac3728-fce3-40dd-8207-553cbf009a75","name":"Code9","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72d9d7d3-11b5-4fc2-affa-a649f515a372","leftValue":"={{ $json.empresa_nome }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[400,2848],"id":"ceac8d7a-36ae-4e7f-87bd-e2cb898e37a5","name":"If"},{"parameters":{"operation":"executeQuery","query":"select distinct cliente as empresa_nome FROM SOLICITANTES_DESK where telefone = '{{ $('RequestDesk').item.json.body.number }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,3024],"id":"fc8ae98c-ff13-4aa7-8170-39b2d59b6b2f","name":"MySQL7","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"jsCode":"const token = JSON.parse($input.first().json.data);\nconst bodyData = $('form-response-interacao').first().json.body\nconst chamadoStr = bodyData.chamados || bodyData.chamadoManual;\nconst chamado = chamadoStr.split(\" - \")[0].trim();\nconst status = $('Merge1').first().json.chave_status\nconst transferirOperadorForm = $('Merge1').first().json.transferirOperador;\nconst transferirGrupoForm = $('Merge1').first().json.transferirGrupo;\n\nasync function fetchChatMessages(chatId) {\n  const requestOptions = {\n    url: `https://api.stw.chat/core/v2/api/chats/${chatId}`,\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': '689a61a95706d77b7eb722cb'\n    }\n  };\n\n  const response = await this.helpers.httpRequest(requestOptions);\n  return response.messages || [];\n}\n\nfunction formatDescricao(messages) {\n  return messages\n    .filter(msg => !msg.isSystemMessage && !msg.isPrivate)\n    .map(msg => {\n      const remetente = msg.isSentByMe ? 'Técnico' : msg.senderName;\n      const date = new Date(msg.dhMessage || msg.utcDhMessage);\n      const dataHorario = date.toLocaleString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      \n      if (msg.dataMedia && msg.dataMedia.urlFile && msg.dataMedia.mimetype) {\n        const tipo = (msg.dataMedia.mimetype.split('/')[1] || 'arquivo');\n        const nome = msg.dataMedia.filename || 'arquivo';\n        return `[${dataHorario}] ${remetente}:\\n[${tipo}] ${nome} - ${msg.dataMedia.urlFile}`;\n      }\n      return `[${dataHorario}] ${remetente}:\\n${msg.text || ''}`;\n    })\n    .join('\\n\\n');\n}\n\nasync function downloadAsBase64(url) {\n  const response = await this.helpers.request({\n    method: 'GET',\n    url: url,\n    encoding: null\n  });\n  return Buffer.from(response).toString('base64');\n}\n\nasync function getOperatorInfo(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": chamado,\n      \"Colunas\": {\n        \"NomeOperador\":\"on\",\n        \"SobrenomeOperador\":\"on\",\n        \"SequenciaGrupo\": \"on\"\n      }\n    }\n  }\n  const response = await this.helpers.httpRequest(request);  \n  const ticket = response.root[0];\n  const nome = ticket?.NomeOperador || \"\";\n  const sobrenome = ticket?.SobrenomeOperador || \"\";\n  const nomeCompleto = [nome, sobrenome].filter(Boolean).join(\" \").trim();\n  const sequenciaGrupo = ticket?.SequenciaGrupo || \"\";\n  return { nomeCompleto, sequenciaGrupo };\n}\n\nasync function getOperatorId(fullName){\n  const request = {\n    url: \"https://api.desk.ms/Operadores/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": fullName,\n      \"Ativo\": \"S\"\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request)\n  return response.root[0]?.Chave\n}\n\nasync function interactTicket(fields){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/interagir\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Chave\": chamado,\n      \"TChamado\":{\n        \"CodFormaAtendimento\": \"000004\",\n        \"CodStatus\": status,\n        ...(fields.transferirOperador && { \"TransferirOperador\": fields.transferirOperador }),\n        ...(fields.transferirGrupo && { \"TransferirGrupo\": fields.transferirGrupo }),\n        ...(fields.codOperador && { \"CodOperador\": fields.codOperador }),\n        \"Descricao\": fields.descricao,\n        \"ObservacaoInterna\": bodyData.obsInterna\n      }\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request)\n  return response\n}\n\nasync function enviarAnexo(anexo) {\n  const request = {\n    url: \"https://files.desk.ms/v1/enviar\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"chamado\": chamado,\n      \"base64\": anexo.base64,\n      \"type\": anexo.mimetype,\n      \"name\": anexo.filename\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\n\n\nconst chatId = bodyData.chatId;\nconst messages = await fetchChatMessages(chatId);\nconst descricao = formatDescricao(messages);\n\nconst anexos = [];\nfor (const msg of messages) {\n  if (msg.dataMedia && msg.dataMedia.urlFile) {\n    const base64 = await downloadAsBase64.call(this, msg.dataMedia.urlFile);\n    anexos.push({\n      base64: base64,\n      filename: msg.dataMedia.filename || 'anexo',\n      mimetype: msg.dataMedia.mimetype || 'application/octet-stream'\n    });\n  }\n}\n\nlet transferirOperador = transferirOperadorForm || \"\";\nlet transferirGrupo = transferirGrupoForm || \"\";\nlet codOperador = \"\";\nlet operatorInfo = await getOperatorInfo();\n\nif (!transferirOperador && !transferirGrupo) {\n  if (operatorInfo.nomeCompleto) {\n    codOperador = await getOperatorId(operatorInfo.nomeCompleto) || \"\";\n  } else if (operatorInfo.sequenciaGrupo) {\n    transferirGrupo = operatorInfo.sequenciaGrupo;\n  }\n}\n\nconst fields = {\n  transferirOperador,\n  transferirGrupo,\n  codOperador,\n  descricao,\n};\n\nconst interacao = await interactTicket(fields);\n\nconst anexosResultados = [];\nfor (const anexo of anexos) {\n  const resultado = await enviarAnexo(anexo);\n  anexosResultados.push(resultado);\n}\n\nreturn [{\n  json: {\n    descricao,\n    interacao,\n    anexosEnviados: anexosResultados\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1488,2816],"id":"d202eab7-b44b-42e7-8b96-20b78aeaf32a","name":"Code10"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1712,2816],"id":"7a8d77a1-8a9a-4a26-9bd0-aae795908088","name":"getToken7"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":3,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-1936,2800],"id":"7496a9f9-2137-481c-8020-4064a5ffecbb","name":"Merge1"},{"parameters":{"operation":"executeQuery","query":"select distinct chaveGrupo from OPERADORES_DESK where grupo = '{{ $json.body.grupo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,2336],"id":"15f0b1c4-78b3-4197-b21e-cfed985d1649","name":"grupoCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select sequencia as chave_status from STATUS_DESK where status ='{{ $json.body.status }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,2624],"id":"ed684adf-24a5-424f-b093-60eeb3cf5d82","name":"statusCod","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select chave as transferirOperador from OPERADORES_DESK where nome_completo = '{{ $json.body.operador }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,2816],"id":"a2ed17b0-7137-4724-aefe-c89e3422df0f","name":"operadorCod2","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct chaveGrupo as transferirGrupo from OPERADORES_DESK where grupo = '{{ $json.body.grupo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2160,3008],"id":"8f50e29e-125c-4ca2-abcc-a7410a763f12","name":"grupoCod1","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a69b4bf5-9510-49ee-bdc8-e8edb5af1365","leftValue":"={{ $json.chamado.erro }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1264,2144],"id":"439abd04-7fa8-4aa3-9f27-fc61b86d7fa3","name":"If1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3fc0e24b-f7a2-4b2c-842d-da990eba46da","leftValue":"={{ $json.interacao.erro }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1264,2816],"id":"51773d5d-5a5c-43d0-a099-1b84e22f0c75","name":"If2"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Erro ao Criar Chamado</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #EDEDED;\n      color: #721c24;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #A6A4A4;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>❌ Erro ao Criar o Chamado</h1>\n    <p>Erro: {{ $json.chamado.erro }}</p>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1040,2048],"id":"069e4966-5c43-4e19-949e-a452d6e538c2","name":"Erro"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Chamado Criado com Sucesso</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #E6FFED;\n      color: #155724;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #C3E6CB;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n    .numero {\n      font-size: 20px;\n      font-weight: bold;\n      color: #0b6623;\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>✅ Chamado Criado com Sucesso!</h1>\n    <p>O número do seu chamado é:</p>\n    <div class=\"numero\">{{ $json.chamado }}</div>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1040,2240],"id":"89aa97d2-0179-4678-a5f9-3f4ef584ad98","name":"Confirmacao"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Erro ao interagir no Chamado</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #EDEDED;\n      color: #721c24;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #A6A4A4;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>❌ Erro ao interagir no chamado</h1>\n    <p>Erro: {{ $json.interacao.erro }}</p>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1040,2720],"id":"50b26853-aa80-44e5-b695-fe06fc8d0dd9","name":"Erro1"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Interação criada com Sucesso</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #E6FFED;\n      color: #155724;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #C3E6CB;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n    .numero {\n      font-size: 20px;\n      font-weight: bold;\n      color: #0b6623;\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>✅ Interação realizada com Sucesso!</h1>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1040,2912],"id":"191f3170-3bab-40be-bc9f-4da2e72b2fd2","name":"Confirmacao1"},{"parameters":{},"type":"n8n-nodes-base.errorTrigger","typeVersion":1,"position":[-2304,3280],"id":"5541ec78-b00e-4445-b6c3-ae9814d1f8a4","name":"Error Trigger"},{"parameters":{"toRecipients":"vinicius.marotti@systemway.com.br","subject":"Workflow error - STW Chat Integração","bodyContent":"={{ $workflow.name }}\n\nWorkflow error:\nExecution: {{ $json.execution.id }}, {{ $json.execution.url }}\n\nError: {{ $json.execution.error.message }}\n","additionalFields":{}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[-2080,3280],"id":"46e67895-61ec-46c4-87f0-adb1f39d115c","name":"Microsoft Outlook1","webhookId":"8677b346-34ab-4b42-b63c-c902226cb6ad","credentials":{"microsoftOutlookOAuth2Api":{"id":"FmajLBt0f4q9kfkl","name":"Microsoft Outlook Vinicius Marotti"}}},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Primeira Extensão</title>\n\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n    integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\" crossorigin=\"anonymous\">\n\n  <script src=\"https://fileschat.sfo2.cdn.digitaloceanspaces.com/public/libs/wlclient.js\"></script>\n\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: auto;\n      min-height: 100%;\n      overflow-x: hidden;\n      /* overflow-y: auto; */\n    }\n\n    iframe {\n      height: calc(100vh - 60px);\n      width: 100%;\n      border: none;\n      /* height: 95vh;\n      overflow: hidden; */\n    }\n  </style>\n\n</head>\n<body>\n  <div class=\"container p-2 pb-0\">\n    <div class=\"d-flex gap-2 mb-2\">\n      <button id=\"btn-chamado\" class=\"btn btn-success flex-fill\">Chamado</button>\n      <button id=\"btn-interacao\" class=\"btn btn-outline-primary flex-fill\">Interação</button>\n    </div>\n  </div>\n  <iframe id=\"form-frame\" src=\"\" style=\"display:none;\"></iframe>\n\n <script>\n  const urlFormChamado = \"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0\";\n  const urlFormInteracao = \"https://n8n.systemway.com.vc/webhook/ac8b649c-2328-4289-a979-b939f4c68f92\";\n\n  function getParamsFromQS(){\n    const qs = new URLSearchParams(window.location.search);\n    const q = (k) => encodeURIComponent(qs.get(k) || \"\");\n    // usa o que vier na URL; completa com vazio se faltar\n    return `?name=${q(\"name\")}&chatId=${q(\"chatId\")}&number=${q(\"number\")}&setor=${q(\"setor\")}`;\n  }\n   \n  function getParams(attendance){\n    if (attendance) {\n      const q = (v) => encodeURIComponent(v ?? \"\");\n      return `?name=${q(attendance.contato?.nome)}&chatId=${q(attendance.atendimentoId)}&number=${q(attendance.contato?.numero)}&setor=${q(attendance.setor?.nome)}`;\n    }\n    // fallback quando o evento não vier (sandbox)\n    return getParamsFromQS();\n  }\n   \n  let currentAttendance = null;\n\n  function updateIframe(url) {\n    const params = getParams(currentAttendance);\n    const frame = document.getElementById('form-frame');\n    frame.src = url + params;\n    frame.style.display = 'block';   // <-- MOSTRA o iframe aqui\n  }\n\n\n  function setActiveButton(tipo) {\n    const btnChamado = document.getElementById('btn-chamado');\n    const btnInteracao = document.getElementById('btn-interacao');\n    if (tipo === 'chamado') {\n      btnChamado.className = \"btn btn-success flex-fill\";\n      btnInteracao.className = \"btn btn-outline-primary flex-fill\";\n    } else {\n      btnChamado.className = \"btn btn-outline-success flex-fill\";\n      btnInteracao.className = \"btn btn-primary flex-fill\";\n    }\n  }\n\n\n  document.getElementById('btn-chamado').onclick = () => {\n    updateIframe(urlFormChamado)\n    setActiveButton('chamado')\n  };\n  document.getElementById('btn-interacao').onclick = () => {\n    updateIframe(urlFormInteracao)\n    setActiveButton('interacao')\n  };\n\n  window.WlExtension.initialize({\n    events: {\n      onOpenAttendance: (attendance) => {\n        currentAttendance = attendance;\n        document.getElementById('form-frame').style.display = 'block';\n        // console.log(attendance)\n        updateIframe(urlFormChamado);\n        setActiveButton('chamado');\n      }\n    }\n  });\n  window.onload = () => {\n      document.getElementById('form-frame').style.display = 'none';\n    };\n</script>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[736,1168],"id":"8fdb523b-50bf-4161-8f6f-2e7bb7de31ec","name":"HTML4"},{"parameters":{"operation":"executeQuery","query":"select status from STATUS_DESK where is_enabled = 1 order by status asc","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,2672],"id":"5badbd46-5b44-47d9-8f4e-a1b7fccdab95","name":"Execute a SQL query","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct categoria from AUTO_CATEGORIA_DESK where categoria <> 'Sem categoria' order by categoria","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,1760],"id":"b38de1f1-0dc6-4b9a-ac4e-696d65caa5b9","name":"Execute a SQL query1","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select cliente, nome_completo, chave as chave_solicitante from SOLICITANTES_DESK where telefone = {{ $('RequestDesk').item.json.body.number }}\n","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[192,2480],"id":"25ada8df-c5e8-461d-9d39-85b220e2777d","name":"Execute a SQL query2","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}}],"connections":{"Switch":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}],[{"node":"MySQL3","type":"main","index":0}],[{"node":"MySQL2","type":"main","index":0}],[{"node":"MySQL","type":"main","index":0}],[{"node":"Execute a SQL query2","type":"main","index":0}],[{"node":"Execute a SQL query","type":"main","index":0}],[{"node":"MySQL6","type":"main","index":0}]]},"getToken":{"main":[[{"node":"Switch","type":"main","index":0}]]},"RequestDesk":{"main":[[{"node":"getToken","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"Code4":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"MySQL3":{"main":[[{"node":"Code1","type":"main","index":0}]]},"MySQL2":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Respond to Webhook4","type":"main","index":0}]]},"HTML2":{"main":[[{"node":"Respond to Webhook5","type":"main","index":0}]]},"HTML3":{"main":[[{"node":"Respond to Webhook6","type":"main","index":0}]]},"integration":{"main":[[{"node":"HTML3","type":"main","index":0}]]},"MySQL":{"main":[[{"node":"Respond to Webhook2","type":"main","index":0}]]},"Code2":{"main":[[{"node":"If1","type":"main","index":0}]]},"autocategoriaCod":{"main":[[{"node":"Merge","type":"main","index":0}]]},"operadorCod":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"getToken3","type":"main","index":0}]]},"getToken3":{"main":[[{"node":"Code2","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook9","type":"main","index":0}]]},"form-stwchat-chamado":{"main":[[{"node":"HTML2","type":"main","index":0}]]},"form-stwchat-interacao":{"main":[[{"node":"HTML","type":"main","index":0}]]},"form-response-chamado":{"main":[[{"node":"autocategoriaCod","type":"main","index":0},{"node":"operadorCod","type":"main","index":0},{"node":"grupoCod","type":"main","index":0}]]},"form-response-interacao":{"main":[[{"node":"statusCod","type":"main","index":0},{"node":"operadorCod2","type":"main","index":0},{"node":"grupoCod1","type":"main","index":0}]]},"MySQL6":{"main":[[{"node":"If","type":"main","index":0}]]},"Code9":{"main":[[{"node":"Respond to Webhook12","type":"main","index":0}]]},"If":{"main":[[{"node":"Code9","type":"main","index":0}],[{"node":"MySQL7","type":"main","index":0}]]},"MySQL7":{"main":[[{"node":"Code9","type":"main","index":0}]]},"getToken7":{"main":[[{"node":"Code10","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"getToken7","type":"main","index":0}]]},"grupoCod":{"main":[[{"node":"Merge","type":"main","index":2}]]},"statusCod":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"operadorCod2":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"grupoCod1":{"main":[[{"node":"Merge1","type":"main","index":2}]]},"Code10":{"main":[[{"node":"If2","type":"main","index":0}]]},"If1":{"main":[[{"node":"Erro","type":"main","index":0}],[{"node":"Confirmacao","type":"main","index":0}]]},"Erro":{"main":[[{"node":"Respond to Webhook7","type":"main","index":0}]]},"Confirmacao":{"main":[[{"node":"Respond to Webhook7","type":"main","index":0}]]},"If2":{"main":[[{"node":"Erro1","type":"main","index":0}],[{"node":"Confirmacao1","type":"main","index":0}]]},"Confirmacao1":{"main":[[{"node":"Respond to Webhook11","type":"main","index":0}]]},"Erro1":{"main":[[{"node":"Respond to Webhook11","type":"main","index":0}]]},"Error Trigger":{"main":[[{"node":"Microsoft Outlook1","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Respond to Webhook10","type":"main","index":0}]]},"Execute a SQL query1":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Execute a SQL query2":{"main":[[{"node":"Respond to Webhook8","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]},"node:Schedule Trigger1":{"recurrenceRules":[]},"node:Schedule Trigger2":{"recurrenceRules":[]},"node:Schedule Trigger3":{"recurrenceRules":[]},"node:Schedule Trigger4":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{"form-stwchat-chamado":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, br","accept-language":"pt-PT,pt;q=0.9,en-US;q=0.8,en;q=0.7","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"2804:14c:6181:8f4a::6d4f","cf-ipcountry":"BR","cf-ray":"9472c4fa78da01c6-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"cfabca0c-f561-4a2c-af11-2fa01c9d0d35","priority":"u=0, i","referer":"https://app.stw.chat/","sec-ch-ua":"\"Google Chrome\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"cross-site","sec-fetch-storage-access":"active","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"2804:14c:6181:8f4a::6d4f","x-forwarded-proto":"https"},"params":{},"query":{"name":"Vinicius Marotti","chatId":"6834ac2d06706d21400d3805"},"body":{},"webhookUrl":"https://n8n.systemway.com.vc/webhook/teste2","executionMode":"production"}}],"form-response-interacao":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"349","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, br","accept-language":"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6","cache-control":"max-age=0","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"177.47.84.240","cf-ipcountry":"BR","cf-ray":"9733058cfe64f187-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"95f76b35-dd5e-4bd0-ba0c-38bc24a4cc2e","content-type":"application/x-www-form-urlencoded","origin":"https://n8n.systemway.com.vc","priority":"u=0, i","referer":"https://n8n.systemway.com.vc/webhook/ac8b649c-2328-4289-a979-b939f4c68f92?name=Rogerio%2FPrefeitura%20de%20Itatinga&chatId=68a86d0aa147c67bf04dfb79&number=5514981339492&setor=Suporte","sec-ch-ua":"\"Not;A=Brand\";v=\"99\", \"Microsoft Edge\";v=\"139\", \"Chromium\";v=\"139\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"same-origin","sec-fetch-storage-access":"active","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"177.47.84.240","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"chatId":"68a86d0aa147c67bf04dfb79","chamados":"0825-000898 - STW Firewall - Acesso - Liberar","chamadoManual":"","status":"Andamento","obsInterna":"Acessamos a máquina do Rogerio e após análise, verificamos que se tratava da rota do link.\r\n\r\nO Rogério disse que irá acionar o suporte do link.","grupo":"","operador":"João Victor Romeda"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/1cf835b4-5339-4a22-9cf9-d124d75f437a","executionMode":"production"}}],"RequestDesk":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"56","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0","accept":"*/*","accept-encoding":"gzip, br","accept-language":"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"177.47.84.240","cf-ipcountry":"BR","cf-ray":"975563f44a97f24e-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"95f76b35-dd5e-4bd0-ba0c-38bc24a4cc2e","content-type":"application/json","origin":"https://n8n.systemway.com.vc","priority":"u=1, i","referer":"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0?name=Bianca%2FSAF&chatId=68adb1b7a147c67bf062fb60&number=5514996879033&setor=Suporte","sec-ch-ua":"\"Not;A=Brand\";v=\"99\", \"Microsoft Edge\";v=\"139\", \"Chromium\";v=\"139\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin","sec-fetch-storage-access":"active","x-forwarded-for":"177.47.84.240","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"event":"get-applicants-list","number":"5514996879033"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/proxy-integration-desk","executionMode":"production"}}],"form-response-chamado":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"334","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36 Edg/140.0.0.0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, br","accept-language":"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6","cache-control":"max-age=0","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"177.143.237.103","cf-ipcountry":"BR","cf-ray":"98762d41cfa3cdce-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"df903d44-2103-4b2a-b2d9-41b8a9732c4c","content-type":"application/x-www-form-urlencoded","dnt":"1","origin":"https://n8n.systemway.com.vc","priority":"u=0, i","referer":"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0?name=Wilson%2F%20C%C3%A2mara%20de%20Botucatu&chatId=68dc2b36b771db2010ae53fb&number=5514991344353&setor=Suporte","sec-ch-ua":"\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Microsoft Edge\";v=\"140\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"same-origin","sec-fetch-storage-access":"active","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"177.143.237.103","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"chatId":"68dc2b36b771db2010ae53fb","number":"5514991344353","cliente":"AAB - Associação Atlética Botucatuense","nomeSolicitante":"Wilson","solicitanteId":"1311","solicitante":"AAB - Associação Atlética Botucatuense - Wilson","assunto":"STW Firewall","subcategoria":"Acesso","tipo":"Liberar","obsInterna":"","grupo":"Suporte","operador":"Rafael Martin"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/749c4c10-156f-4044-845f-a7b1bc4c55a2","executionMode":"production"}}]},"versionId":"de6c270e-5d32-47f5-8a4f-488c3312e952","triggerCount":6,"shared":[{"createdAt":"2025-07-21T18:37:49.159Z","updatedAt":"2025-07-21T18:37:49.159Z","role":"workflow:owner","workflowId":"vgEs5Onkfq6v5Dg5","projectId":"W87TnA5pjVYkC94H"}],"tags":[]}