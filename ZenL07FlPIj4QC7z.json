{"createdAt":"2025-09-17T19:13:57.225Z","updatedAt":"2025-10-10T19:20:53.340Z","id":"ZenL07FlPIj4QC7z","name":"Agente STW - Categories","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"payload","type":"object"},{"name":"clientId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-384,-80],"id":"b39fb871-3a69-41f3-ba3a-dd8e8033a251","name":"Payload"},{"parameters":{"jsCode":"const clientInfo = $('ClientInfo').first().json\nconst clientName = clientInfo.cliente\nconst applicantId = clientInfo.solicitante_id\n\nconst items = $input.all();\n\nasync function getToken() {\n  const request = {\n    url: \"https://api.desk.ms/Login/autenticar\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": \"3c6a9bc092a7386d6485a2fba65b48849c8b5647\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\n\n// Função para verificar se uma categoria é válida para o cliente (mantida como estava)\nasync function getCategories(token, category) {\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/ListaAutocategoria\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": category,\n      \"Ativo\": \"S\",\n      \"Filtro\": {\n        \"ListaCatalogoUsuario\": [applicantId, \"equal\"]\n      }\n    }\n  };\n  const response = await this.helpers.httpRequest(request);\n\n  const normalize = (s) => (s ?? \"\")\n    .toString()\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\");\n\n  const q = normalize(category);\n  const hasExactPrefix =\n    Array.isArray(response?.root) &&\n    response.root.some(item => {\n      const assunto = normalize(item?.Assunto);\n      return assunto.startsWith(q);\n    });\n\n  return hasExactPrefix ? category : null;\n}\n\nasync function main() {\n  const deskToken = await getToken();\n\n  const promises = items.map(item => getCategories(deskToken, item.json.categoria));\n  const validCategories = await Promise.all(promises);\n\n  const filteredCategories = validCategories.filter(Boolean);\n\n  const finalOutput = {\n    clients: [\n      {\n        client: clientName,\n        applicantId: applicantId,\n        categories: filteredCategories\n      }\n    ]\n  };\n  \n  // Retorna o objeto final para o n8n\n  return [{\n    json: finalOutput\n  }];\n}\n\nreturn main();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[288,-80],"id":"4bfda081-7e2c-4353-bb45-8bd9e1e63e50","name":"Code"},{"parameters":{"operation":"executeQuery","query":"select distinct categoria from AUTO_CATEGORIA_DESK where categoria <> 'Sem categoria' order by categoria","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.5,"position":[64,-80],"id":"9e594a28-705c-43a9-bf24-ff7cdf101a63","name":"Categories","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"set","key":"={{ $node['Payload'].json.payload.whatsapp }}_categories","value":"={{ JSON.stringify($json.clients) }}","expire":true,"ttl":1000},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[512,-80],"id":"5ae6ff5b-fec8-475a-a2fb-0461e4e7ac05","name":"Redis","credentials":{"redis":{"id":"clSKY8x0csnaJ88D","name":"Redis account"}}},{"parameters":{"operation":"executeQuery","query":"select cliente, chave as solicitante_id from SOLICITANTES_DESK where telefone = '{{ $node['Payload'].json.payload.whatsapp }}' and codigo_cliente = '{{ $json.clientId }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.5,"position":[-160,-80],"id":"65653522-9a48-442c-94d6-bd3ced9f106d","name":"ClientInfo","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"delete","key":"=5514974009711_categories"},"type":"n8n-nodes-base.redis","typeVersion":1,"position":[-384,144],"id":"9251f469-64a1-4459-8a8a-0e08aad79380","name":"Redis2","credentials":{"redis":{"id":"clSKY8x0csnaJ88D","name":"Redis account"}}}],"connections":{"Code":{"main":[[{"node":"Redis","type":"main","index":0}]]},"Categories":{"main":[[{"node":"Code","type":"main","index":0}]]},"Payload":{"main":[[{"node":"ClientInfo","type":"main","index":0}]]},"Redis":{"main":[[]]},"ClientInfo":{"main":[[{"node":"Categories","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Payload":[{"json":{"payload":{"whatsapp":"5514974009711"},"clientId":"30"}}]},"versionId":"4c3a35d0-0cf8-4c10-b6f9-0bd9ab96f71e","triggerCount":0,"shared":[{"createdAt":"2025-09-17T19:13:57.225Z","updatedAt":"2025-09-17T19:13:57.225Z","role":"workflow:owner","workflowId":"ZenL07FlPIj4QC7z","projectId":"W87TnA5pjVYkC94H"}],"tags":[]}