{"createdAt":"2025-07-18T19:05:47.040Z","updatedAt":"2025-10-08T12:53:56.734Z","id":"W0vQW1BeiyuSozpJ","name":"SystemWay - COBRANCA CHAMADO","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"1ca2852c-5658-4f4c-9fd4-9f24e761ce5c","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1104,416],"id":"f3e6b480-37e6-4bd6-9abe-631c3596cd06","name":"Webhook","webhookId":"1ca2852c-5658-4f4c-9fd4-9f24e761ce5c"},{"parameters":{"mode":"raw","jsonOutput":"={{ (() => {\n  const contentStr = $json.body.content;\n\n  try {\n    return { content: JSON.parse(contentStr) };\n  } catch (err) {\n    // Tratativa simples: escapa aspas internas mal formatadas\n    const corrigido = contentStr.replace(/\\\\n/g, \"\\\\n\").replace(/\\\\\"/g, '\"').replace(/\"([^\"]*?)\":\\s*\"([^\"]*?)\"([^\"]*?)\"([^\"]*?)\"/g, (match, p1, p2, p3, p4) => {\n      return `\"${p1}\": \"${p2}${p3.replace(/\"/g, '\\\\\"')}${p4}\"`;\n    });\n\n    return { content: JSON.parse(corrigido) };\n  }\n})() }}","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-880,416],"id":"17841d76-1eff-41a9-97ff-336b2d87fa9b","name":"VARS"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('VARS').first().json.content.causa_cod }}","rightValue":"000027","operator":{"type":"string","operation":"equals"},"id":"90e9c423-7f79-4f1c-87e0-f428a737f3ee"}],"combinator":"and"},"renameOutput":true,"outputKey":"Solicitação Compra"},{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f4847e8b-f9ab-4b45-9f70-030846ad99ba","leftValue":"={{ $('VARS').first().json.content.assunto_cod }}","rightValue":"8208","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Interacao Chamado Pai"}]},"options":{"fallbackOutput":"extra","ignoreCase":true}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-208,400],"id":"5a73630e-bd77-4fbf-8c20-517c079c2c63","name":"Switch"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"21e3bae6-7445-4c1b-a24c-5d3a9e725ef1","leftValue":"={{   $json.content.assunto.startsWith(\"Compras - Cliente Interno\")\n||   [     \"000011\",     \"000019\",     \"000026\"   ].includes($json.content.causa_cod)\n|| ($json.content.assunto_cod === \"8208\" && (!$json.content.pai || $json.content.pai === \"\"))\n}}","rightValue":"=","operator":{"type":"boolean","operation":"false","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-656,416],"id":"c9bdd9dd-e708-44e2-97d5-db7933eaebd5","name":"If"},{"parameters":{"jsCode":"const token = $('getToken').first().json.response\nconst chamadoPai = $('VARS').first().json.content.pai\nconst lastDescription = $('VARS').first().json.content.descr\nconst internalDescription = $('VARS').first().json.content.descrinterna\n\nasync function getMainTicketId(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": chamadoPai,\n      \"Colunas\": {\n        \"Chave\": \"on\",\n        \"CodChamado\": \"on\"\n      }\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request);\n  return response.root[0]?.Chave\n}\n\nasync function openTicket(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte\",\n    method: \"PUT\", \n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"TChamado\": {\n        \"Solicitante\": \"1945\",\n        \"AutoCategoria\": \"008208\",\n        \"Solicitacao\": \"000071\",\n        \"ObservacaoInterna\": `${internalDescription}`,\n        \"Descricao\": `Última descrição: \\n${lastDescription}`\n      }\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response[0]\n}\n\nasync function getOpenTicketKey(codigoChamado){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": codigoChamado,\n      \"Colunas\": {\n        \"Chave\": \"on\",\n        \"CodChamado\": \"on\"\n      }\n    }\n  };\n\n  const response = await this.helpers.httpRequest(request);\n  return response.root[0].Chave;\n}\nasync function linkTickets(mainTicketId, chaveFilho) {\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/vincular\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"TChamadoPai\": {\n        \"CodChamadoPai\": mainTicketId\n      },\n      \"TChamadoFilho\": [\n        {\n          \"CodChamadoFilho\": chaveFilho,\n          \"Ex\": \"0\"\n        }\n      ]\n    }\n  };\n\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\nreturn (async () => {\n  const mainTicketId = await getMainTicketId();\n  const codChamado = await openTicket();\n\n  if (!codChamado) throw new Error(\"Código do chamado não encontrado\");\n\n  const chaveFilho = await getOpenTicketKey(codChamado);\n  if (!chaveFilho) throw new Error(\"Chave do chamado filho não encontrada\");\n\n  const linkResponse = await linkTickets(mainTicketId, chaveFilho);\n\n  return [{\n    mainTicketId: mainTicketId,\n    codChamado: codChamado,\n    chaveFilho: chaveFilho,\n    linkResponse: linkResponse\n  }]\n})();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[16,224],"id":"7ea02721-cd78-42f4-9861-744bdbd24f3f","name":"Solicitacao Compra"},{"parameters":{"jsCode":"const token = $('getToken').first().json.response\nconst chamadoPai = $('VARS').first().json.content.pai\nconst lastDescription = $('VARS').first().json.content.descr\n\nasync function getMainTicketInfo(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": chamadoPai,\n      \"Colunas\": {\n        \"Chave\": \"on\",\n        \"CodChamado\": \"on\",\n        \"NomeOperador\":\"on\",\n        \"SobrenomeOperador\":\"on\"\n      }\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request);\n  return response.root[0]\n}\n\nasync function getOperatorId(fullName){\n  const request = {\n  url: \"https://api.desk.ms/Operadores/lista\",\n  method: \"POST\",\n  headers: {\n    \"Authorization\": token,\n    \"Content-Type\": \"application/json\"\n  },\n  body: {\n    \"Pesquisa\": fullName,\n    \"Ativo\": \"S\"\n  }\n}\n\nconst response = await this.helpers.httpRequest(request)\nreturn response.root[0]?.Chave\n}\n\nasync function operatorMainTicket(mainTicketId, operatorId){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/interagir\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Chave\": mainTicketId,\n      \"TChamado\":{\n        \"CodFormaAtendimento\": \"000004\",\n        \"CodStatus\": \"000182\",\n        \"CodOperador\": operatorId,\n        \"Descricao\": lastDescription\n      }\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request)\n  return response\n}\n\nreturn (async () => {\n  const mainTicket = await getMainTicketInfo();\n  const mainTicketId = mainTicket.Chave;\n  const fullName = `${mainTicket.NomeOperador} ${mainTicket.SobrenomeOperador}`;\n\n  if (!mainTicketId || !fullName.trim()) throw new Error(\"Informações do chamado ou operador inválidas\");\n\n  const operatorId = await getOperatorId(fullName);\n  if (!operatorId) throw new Error(\"Operador não encontrado\");\n\n  const interactionResponse = await operatorMainTicket(mainTicketId, operatorId);\n\n  return [{\n    mainTicketId: mainTicketId,\n    fullName: fullName,\n    operatorId: operatorId,\n    interactionResponse: interactionResponse\n  }]\n})()"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[16,416],"id":"beda5fc5-ad74-48ae-a729-5b638773043f","name":"Interacao Chamado Pai"},{"parameters":{"jsCode":"const tokenAuthenticate = $('getToken').first().json.response\nconst chave = $('VARS').first().json.content.chamado_cod\n\nasync function getAutoCategory(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": tokenAuthenticate,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Chave\": chave\n    }\n  }\n  const response = await this.helpers.httpRequest(request)\n  return response.TChamado.Assunto\n}\n\nasync function listInteractions(){\n  try {\n    const category = await getAutoCategory()\n    let isWithoutContract = false\n    if (category.startsWith(\"Sem Contrato\")) {\n      const keyWords = [\"Orçamento\", \"Dúvida\", \"Cortesia\"]\n      const containsKeyWord = keyWords.some(keyWord => category.includes(keyWord))\n  \n      if(!containsKeyWord){\n        isWithoutContract = true\n      }\n  }\n    \n  const request = {\n    url: \"https://api.desk.ms/ChamadoHistoricos/lista\",\n    method: \"POST\", \n    headers: {\n      \"Authorization\": tokenAuthenticate,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Chave\": chave,\n      \"Solicitante\": \"N\"\n    }\n  }\n  const response = await this.helpers.httpRequest(request)\n  const interactions = response.root || []\n\n  const statusCode = [\"000182\", \"000030\"];\n\n  const isStatusTarget = interactions.some(interaction =>\n      interaction.Status?.some(status => statusCode.includes(status.sequence))\n    );\n\n    const totalSeconds = interactions.reduce((total, interaction) => {\n      const [h, m, s] = interaction.TotalHoras?.split(\":\").map(Number) || [0, 0, 0];\n      return total + (h * 3600 + m * 60 + s);\n    }, 0);\n\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const totalFormatted = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n\n    const matchedInteraction = interactions.find(i =>\n      i.Status?.some(status => status.sequence === \"000182\")\n    );\n    const isReceivedPart = matchedInteraction?.Descricao || \"\"\n\n    const hasOnsiteVisit = interactions?.some(i => (i?.NomeFormaAtendimento || '').trim() === \"Visita Técnica\")\n    let shouldChargeVisit = false\n    if(hasOnsiteVisit){\n      const ticketResp = await this.helpers.httpRequest({\n        url: \"https://api.desk.ms/ChamadosSuporte\",\n        method: \"POST\",\n        headers: {\n          \"Authorization\": tokenAuthenticate,\n          \"Content-Type\": \"application/json\"\n        },\n        body: {\n          \"Chave\": chave\n        }\n      })\n      const clientId = ticketResp?.TChamado?.CodCliente?.[0]?.id\n\n      if(clientId){\n        const clientResp = await this.helpers.httpRequest({\n            url: \"https://api.desk.ms/Clientes\",\n            method: \"POST\",\n            headers: {\n              \"Authorization\": tokenAuthenticate,\n              \"Content-Type\": \"application/json\"\n            },\n            body: {\n              \"Chave\": clientId\n            }\n          })\n        const city = (clientResp?.TCliente?.Cidade || \"\").trim().toLowerCase()\n        if(city !== \"botucatu\"){\n          shouldChargeVisit = true\n        }\n      }\n      }\n    \n    return [{\n      isStatusTarget: isStatusTarget,\n      totalHours: totalFormatted,\n      isReceivedPart: isReceivedPart,\n      isWithoutContract: isWithoutContract,\n      shouldChargeVisit: shouldChargeVisit\n    }]\n\n  } catch (error) {\n    console.error(\"Erro ao listar interações:\", error.message);\n    return [{ error: true, message: error.message }];\n  }\n}\n\nreturn listInteractions();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[16,608],"id":"93d32282-7424-4dbf-a085-c56f7940813b","name":"Interacoes Chamado"},{"parameters":{"jsCode":"const token = $('getToken').first().json.response\nconst isReceivedPart = $input.first().json.isReceivedPart\nconst empresa = $('VARS').first().json.content.cliente_nome\nconst solicitante = $('VARS').first().json.content.usuario_nome\nconst cnpj = $('VARS').first().json.content.cliente_cnpj\nconst totalHoras =  $input.first().json.totalHours\nconst lastInteraction = $('VARS').first().json.content.descr\nconst chaveChamadoPai = $('VARS').first().json.content.chamado_cod\n\nasync function openTicket() {\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte\",\n    method: \"PUT\", \n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"TChamado\": {\n        \"Solicitante\": \"1298\",\n        \"AutoCategoria\": \"008390\",\n        \"Solicitacao\": \"000071\",\n        \"TransfCodOperador\": \"24\",\n        \"Descricao\": `\n          Empresa: ${empresa}\\n\n          Solicitante: ${solicitante}\\n\n          CNPJ: ${cnpj}\\n\n          Total de horas: ${totalHoras}\\n\n          ${isReceivedPart ? `Código da peça recebida: ${isReceivedPart}` : \"\"}\\n\n          Descrição da última interação: \\n${lastInteraction}\\n\n          `.trim()\n      }\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response[0]\n}\n\nasync function getMainTicketKey(ticket){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": ticket,\n      \"Colunas\": {\n        \"Chave\": \"on\",\n        \"CodChamado\": \"on\"\n      }\n    }\n  }\n  const response = await this.helpers.httpRequest(request)\n  return response.root[0].Chave\n}\n\nasync function linkTickets(chaveChamadoFilho){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/vincular\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"TChamadoPai\": {\n        \"CodChamadoPai\": chaveChamadoPai\n      },\n      \"TChamadoFilho\": [\n        {\n        \"CodChamadoFilho\": chaveChamadoFilho,\n        \"Ex\": \"0\"\n      }\n      ]\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response\n}\n\nreturn (async () => {\n  const newTicket = await openTicket();\n\n  if (!newTicket) throw new Error(\"Erro ao abrir chamado: retorno inválido\");\n\n  const chaveFilho = await getMainTicketKey(newTicket);\n  if (!chaveFilho) throw new Error(\"Não foi possível obter a chave do novo chamado\");\n\n  const linkResponse = await linkTickets(chaveFilho);\n\n  return [{\n    json: {\n      newTicket: newTicket,\n      linkResponse: linkResponse\n    }\n  }]\n})();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[464,608],"id":"e37a7ffd-ffa3-493f-ab1b-113b5d4c4d5f","name":"Chamado Cobranca"},{"parameters":{},"type":"n8n-nodes-base.errorTrigger","typeVersion":1,"position":[-1104,880],"id":"e5b5e9fd-4c98-46e2-8b08-da45fe3b1d34","name":"Error Trigger"},{"parameters":{"toRecipients":"vinicius.marotti@systemway.com.br","subject":"Workflow error - STW COBRANCA","bodyContent":"={{ $workflow.name }}\n\nWorkflow error:\nExecution: {{ $json.execution.id }}, {{ $json.execution.url }}\n\nError: {{ $json.execution.error.message }}\n\n","additionalFields":{}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[-880,880],"id":"12aef2ab-d8b0-48a8-8122-25bb8d12a333","name":"Microsoft Outlook","webhookId":"8677b346-34ab-4b42-b63c-c902226cb6ad","credentials":{"microsoftOutlookOAuth2Api":{"id":"FmajLBt0f4q9kfkl","name":"Microsoft Outlook Vinicius Marotti"}}},{"parameters":{"jsCode":"const request = {\n  url: \"https://api.desk.ms/Login/autenticar\",\n  method: \"POST\",\n  headers: {\n    \"Authorization\": \"3c6a9bc092a7386d6485a2fba65b48849c8b5647\",\n    \"Content-Type\": \"application/json\"\n  },\n  body: {\n    \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n  }\n};\n\nconst response = await this.helpers.httpRequest(request);\n\nreturn [{\n  response: response\n}]\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-432,416],"id":"339de0b6-2237-413f-a417-cba049d417bb","name":"getToken","retryOnFail":true,"waitBetweenTries":3000,"executeOnce":false,"alwaysOutputData":false},{"parameters":{"toRecipients":"={{ $('VARS').first().json.content.analista_email }}","subject":"=Automação - Chamado de cobrança","bodyContent":"=Novo chamado de cobrança foi realizado!\n\nEmpresa: {{ $('VARS').item.json.content.cliente_nome }}\nSolicitante: {{ $('VARS').item.json.content.usuario_nome }}\nChamado de cobrança aberto: {{ $json.newTicket }}\nChamado Pai: {{ $('VARS').item.json.content.chamado }} - {{ $('VARS').item.json.content.assunto }}","additionalFields":{}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[688,608],"id":"dd854a3c-5ad3-4cd3-8088-7cf753ccf00e","name":"Microsoft Outlook1","webhookId":"de508768-c95e-4383-a091-72b33e40e331","credentials":{"microsoftOutlookOAuth2Api":{"id":"FmajLBt0f4q9kfkl","name":"Microsoft Outlook Vinicius Marotti"}}},{"parameters":{"toRecipients":"={{ $('VARS').first().json.content.analista_email }}","subject":"=Automação - Chamado de compras","bodyContent":"=Novo chamado de compras foi realizado!\n\nEmpresa: {{ $('VARS').item.json.content.cliente_nome }}\nSolicitante: {{ $('VARS').item.json.content.usuario_nome }}\nChamado de compras aberto: {{ $json.codChamado }}\nChamado Comercial: {{ $('VARS').item.json.content.chamado }} - {{ $('VARS').item.json.content.assunto }}\nChamado Pai: {{ $('VARS').item.json.content.pai }}","additionalFields":{}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[240,224],"id":"5cc1b097-40e9-4f67-8772-e203f9675151","name":"Microsoft Outlook2","webhookId":"de508768-c95e-4383-a091-72b33e40e331","credentials":{"microsoftOutlookOAuth2Api":{"id":"FmajLBt0f4q9kfkl","name":"Microsoft Outlook Vinicius Marotti"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72f1111d-3be3-4902-95fc-c030392c1949","leftValue":"={{ $json.isWithoutContract }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"ee7b36b1-ba6f-464b-ae0e-a773be27f39a","leftValue":"={{ $json.isStatusTarget }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}},{"id":"a4919c81-de5a-4685-a3b9-cb13130c6d84","leftValue":"={{ $json.shouldChargeVisit }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[240,608],"id":"fe15ee0f-2655-4677-b8bc-99ed5b07156b","name":"Sem Contrato/ Status Alvo/ Visita Técnica"}],"connections":{"Webhook":{"main":[[{"node":"VARS","type":"main","index":0}]]},"VARS":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"getToken","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Solicitacao Compra","type":"main","index":0}],[{"node":"Interacao Chamado Pai","type":"main","index":0}],[{"node":"Interacoes Chamado","type":"main","index":0}]]},"Interacoes Chamado":{"main":[[{"node":"Sem Contrato/ Status Alvo/ Visita Técnica","type":"main","index":0}]]},"Error Trigger":{"main":[[{"node":"Microsoft Outlook","type":"main","index":0}]]},"getToken":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Chamado Cobranca":{"main":[[{"node":"Microsoft Outlook1","type":"main","index":0}]]},"Solicitacao Compra":{"main":[[{"node":"Microsoft Outlook2","type":"main","index":0}]]},"Sem Contrato/ Status Alvo/ Visita Técnica":{"main":[[{"node":"Chamado Cobranca","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"3560","user-agent":"Python-urllib/3.8","accept-encoding":"gzip, br","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"35.173.36.8","cf-ipcountry":"US","cf-ray":"983a85d25c0c2d24-IAD","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"96ad62bf-0c77-413e-8199-7484ab5284c2","content-type":"application/x-www-form-urlencoded","x-forwarded-for":"35.173.36.8","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"action":"save.ticket","content":"{\"datacri\": \"2025-09-23\", \"horacri\": \"10:52:25\", \"chamado\": \"0925-000813\", \"chamado_cod\": \"28747\", \"interacao_cod\": 0, \"assunto\": \"Ticket Cancelado\", \"assunto_cod\": \"8198\", \"cliente_cod\": \"799\", \"grupoempresa_cod\": \"\", \"usuario_cod\": \"3630\", \"analista\": \"12\", \"grupo_cod\": \"000001\", \"status\": \"Resolvido\", \"status_cod\": \"000002\", \"solicitacao_cod\": \"000003\", \"prioridade_cod\": \"000005\", \"tocorrencia_cod\": \"000008\", \"categoria_cod\": \"005653\", \"tipo_cod\": \"000290\", \"descrinterna\": \"\", \"cliente_nome\": \"Geoprova Engenharia Ensaios e Monitoramento LTDA\", \"usuario_nome\": \"Kelly Fagundes\", \"usuario_email\": \"kelly.fagundes@geoprova.com.br\", \"analista_nome\": \"Thiago Cavalcante\", \"grupo_nome\": \"Suporte\", \"status_nome\": \"Resolvido\", \"solicitacao_nome\": \"Email\", \"prioridade_nome\": \"5 - Planejada\", \"tocorrencia_nome\": \"Evento\", \"categoria_nome\": \"Cancelado\", \"tipo_nome\": \"Cancelar\", \"descr\": \"Prezada, Equipe System.\\n\\nConforme conversamos via WhatsApp hoje às 11:41, o processo relacionado a rede visitante foi concluído com sucesso. Contudo, as impressoras ainda não estão funcionando e não estão imprimindo.\\n\\nPeço, por gentileza, que verifiquem a possibilidade de resolver o problema imediatamente. Caso não seja possível, gostaria de receber uma previsão de prazo para a resolução, pois a situação tem\\ngerado alguns impactos nas operações da empresa.\\n\\nAgradeço desde já pelo retorno e suporte.\\n\\nAtenciosamente,\\n\\n[cid:image001.png@01DC2BE8.9F7E16C0] <a href=\"https://www.geoprova.com.br/\" target=\"blank\">https://www.geoprova.com.br/</a>\\n\\n[cid:image002.png@01DC2BE8.9F7E16C0] <a href=\"https://www.linkedin.com/company/geoprova-engenharia/\" target=\"blank\">https://www.linkedin.com/company/geoprova-engenharia/</a>\\n[cid:image003.png@01DC2BE8.9F7E16C0] <a href=\"https://www.instagram.com/geoprovaengenharia/\" target=\"blank\">https://www.instagram.com/geoprovaengenharia/</a>\\n[cid:image004.png@01DC2BE8.9F7E16C0] <a href=\"https://www.facebook.com/GeoprovaEngenharia\" target=\"blank\">https://www.facebook.com/GeoprovaEngenharia</a>\\n[cid:image005.png@01DC2BE8.9F7E16C0] <a href=\"https://www.youtube.com/channel/UC3CfIHpv31QW12S-oo84ifQ\" target=\"blank\">https://www.youtube.com/channel/UC3CfIHpv31QW12S-oo84ifQ</a>\\n\\n\\nKelly K. Fagundes Alves\\nSupervisora Engenharia\\n(55 19) 99855-5797\\nkelly.fagundes@geoprova.com.br\\nwww.geoprova.com.br <a href=\"http://www.geoprova.com.br/\" target=\"blank\">http://www.geoprova.com.br/</a>\", \"formaat_cod\": \"000004\", \"causa\": \"Ticket Cancelado\", \"causa_cod\": \"000026\", \"fluxo_inicial_chamado\": \"\", \"solicitante\": \"false\", \"first_call\": \"true\", \"prefixo\": \"systemway\"}","trigger":"4"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/1ca2852c-5658-4f4c-9fd4-9f24e761ce5c","executionMode":"production"}}]},"versionId":"5e1b840d-e0e1-49a5-afb4-7b1449581fc6","triggerCount":1,"shared":[{"createdAt":"2025-07-18T19:05:47.040Z","updatedAt":"2025-07-18T19:05:47.040Z","role":"workflow:owner","workflowId":"W0vQW1BeiyuSozpJ","projectId":"W87TnA5pjVYkC94H"}],"tags":[]}